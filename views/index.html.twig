<!DOCTYPE html>
<html>

<head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="robots" content="noindex,nofollow" />

    <title>{{ name }} Composer repository</title>

    <style type="text/css">
        {% include 'assets/bootstrap.min.css' %}
    </style>
</head>

<body>

<nav class="navbar navbar-default">
    <div class="container">
        <form class="navbar-form navbar-right">
            <div class="form-group">
                <label for="search">Filter:</label>
                <input type="text" id="search" class="form-control" autocomplete="off" autofocus />
            </div>
        </form>
    </div>
</nav>

<div class="container">

    <div class="page-header">
        <h1>
            {% if name %}{{ name }}{% else %}Composer repository{% endif %}
        </h1>

        <small id="lastupdate">
            Last updated: <time datetime="{{ "now"|date(constant('\DateTime::ISO8601')) }}">{{ "now"|date(constant('\DateTime::RSS')) }}</time>
        </small>

        {% if description %}<p>{{ description|raw }}</p>{% endif %}
    </div>

    <p>Add this Satis repository to your <kbd>composer.json</kbd>:</p>
        <pre><code>{
    "repositories": [
        { "type": "composer", "url": "{{ url }}" }
    ]
}</code></pre>

    <div id="package-list">
        {% for name, package in packages %}
            {% include 'package.html.twig' %}
        {% endfor %}
    </div>

    <div id="ft">
        <p><small>This Composer repository is powered by <a href="https://github.com/composer/satis">Satis</a> {{ constant('Composer\\Satis\\Satis::VERSION') }} - Last updated:  {{ "now"|date(constant('\DateTime::ISO8601')) }}</small></p>
    </div>

</div>

<script>

{% include 'assets/jquery.slim.min.js' %}

{% include 'assets/bootstrap.min.js' %}

{% include 'assets/moment.min.js' %}

$(function(){
    var packages = $('h3');
    var timer;
    var $search = $('input#search');
    var $list = $('#package-list');

    $search.keyup(function() {
        clearTimeout(timer);
        var milliseconds = 350;
        var needle = $(this).val().toLowerCase(), show;
        timer = setTimeout(function() {
            $list.hide();
            packages.each(function(){
                show = $(this).text().toLowerCase().indexOf(needle) != -1;
                $(this).parent().parent().toggle(show);
            });
            $list.show();
        }, milliseconds);
    }).focus();

    $search.change(function(){
        window.location.hash = "!/" + $(this).val().toLowerCase();
    });

    $(window).on("hashchange", function() {
        if (window.location.hash.indexOf("#!/") == 0) {
            $search.val(window.location.hash.replace(/#!\//,"").toLowerCase());
            $search.trigger("keyup");
        } else {
            var $anchor = $("h3[id='"+window.location.hash.replace(/^#/,"")+"']");
            if ($anchor.length != $anchor.filter(":visible").length) {
                $search.val("").trigger("keyup");
                $anchor.get(0).scrollIntoView();
            }
        }
    });

    $(window).trigger("hashchange");
    var $lastUpdate = $('#lastupdate').find('time');
    function updateDate() {
        $lastUpdate.text(moment('{{ "now"|date(constant('\DateTime::ISO8601')) }}').fromNow());
    }
    setInterval(updateDate, 5000);
    updateDate();
});
</script>
</body>
</html>
